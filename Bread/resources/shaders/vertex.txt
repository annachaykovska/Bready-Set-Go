#version 330 core
layout (location = 0) in vec3 aPos;
layout (location = 1) in vec3 aNormal;
layout (location = 2) in vec2 aTexCoord;

out vec2 ourTexCoord;
out vec3 ourNormal;
out vec3 fragPos;
out vec4 fragPosLightSpace;
out vec4 roughFragPosLightSpace;

uniform mat4 model;
uniform mat4 view;
uniform mat4 proj;
uniform mat4 lightSpaceMatrix;
uniform mat4 roughLightSpaceMatrix;

uniform vec3 playerPos;
uniform mat4 playerModelMatrix;

out vec4 playerFragPos;

void main()
{
	gl_Position = proj * view * model * vec4(aPos, 1.0);
	ourTexCoord = aTexCoord;
	ourNormal = transpose(inverse(mat3(model))) * aNormal;
	fragPos = vec3(model * vec4(aPos, 1.0));
	fragPosLightSpace = lightSpaceMatrix * vec4(fragPos, 1.0);
	roughFragPosLightSpace = roughLightSpaceMatrix * vec4(fragPos, 1.0);
	playerFragPos = playerModelMatrix * vec4(playerPos, 1.0);
}